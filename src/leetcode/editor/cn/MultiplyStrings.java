package leetcode.editor.cn;

//43、字符串相乘
class MultiplyStrings {
    public static void main(String[] args) {
        Solution solution = new MultiplyStrings().new Solution();
        String num
        String num
        long start = System.currentTimeMillis();
        String multiply = solution.multiply(num1, num2);
        long end = System.currentTimeMillis();
        System.out.println(multiply);
        System.out.println(end-start);

    }

    //leetcode submit region begin(Prohibit modification and deletion)
    class Solution {

        //模拟乘法，例如67*89 = 6*8（7*8 + 6*9）7*9  每一位相乘存入res数组，再往前进位。
        public String multiply(String num1, String num2) {
            if ("0".equals(num1) || "0".equals(num2)) {
                return "0";
            }

            char[] char1 = num1.toCharArray();
            int len1 = char1.length;
            char[] char2 = num2.toCharArray();
            int len2 = char2.length;

            int[] n1 = new int[len1];
            int[] n2 = new int[len2];
            int[] res = new int[len1 + len2];

            for (int i = 0; i < len1; i++) {
                n1[i] = char1[i] - '0';
            }
            for (int i = 0; i < len2; i++) {
                n2[i] = char2[i] - '0';
            }
            for (int i = 0; i < len1; i++) {
                for (int j = 0; j < len2; j++) {
                    res[i + j] += n1[i] * n2[j];
                }
            }
            for (int i = len1 + len2 - 1; i > 0; i--) {
                res[i - 1] += res[i] / 10;
                res[i] %= 10;
            }

            StringBuilder builder = new StringBuilder();
            for (int i = 0; i < len1 + len2 - 1; i++) {
                builder.append(res[i]);
            }
            return builder.toString();
        }
    }
//leetcode submit region end(Prohibit modification and deletion)

}